syntax = "proto3";

import "google/protobuf/struct.proto";
import "common/payment/definition.proto";

option java_multiple_files = true;
option java_package = "games.mythical.saga.sdk.proto.api.payment";

package saga.api.payment;
/**
 * @exclude
 * ----- Payment Definitions -----
 */
message PaymentMethodProto {
    string trace_id = 1;
    /* User of this Payment Method */
    string oauth_id = 2;
    /* Payment method data */
    PaymentMethodData payment_method_data = 3;
    /* Address of this Payment Method */
    Address address = 4;
}

message PaymentMethodProtos {
    repeated PaymentMethodProto payment_method_protos = 1;
}

message PaymentMethodData {
    /* Make this the default payment */
    bool make_default = 1;
    /* Payment data to use */
    oneof payment_method_data {
        CybersourcePaymentData cybersource = 2;
        UpholdPaymentData uphold = 3;
    }
}

message Address {
    string first_name = 1;
    string last_name = 2;
    string address_line_1 = 3;
    string address_line_2 = 4;
    string city = 5;
    string state = 6;
    string postal_code = 7;
    string country_name = 8;
    string country_iso_alpha_2 = 9;
}

message CybersourcePaymentData {
    string expiration_month = 1;
    string expiration_year = 2;
    string card_type = 3;
    string instrument_id = 4;
    string payment_method_token_id = 5;
}

message UpholdPaymentData {
    string temp_state_code = 1;
    string email = 2;
    string status = 3;
    google.protobuf.Struct verifications = 4;
    string birth_date = 5;
    repeated UpholdCardProto cards = 6;
}

message UpholdCardProto {
    string uphold_id = 1;
    string currency = 2;
    string balance = 3;
    string normalized_currency = 4;
    string normalized_balance = 5;
    string label = 6;
}

/**
 * @exclude
 * ----- Request and Response Definitions -----
 */
message CreatePaymentMethodRequest {
    string oauth_id = 1;
    oneof provider {
        CreateCybersourceCardProto cybersource = 4;
        UpholdStartLinkProto uphold = 5;
    }
}

message UpholdStartLinkProto {
}

message CreateCybersourceCardProto {
    string exp_month = 1;
    string exp_year = 2;
    string card_type = 3;
    string instrument_id = 4;
    Address billing_address = 5;
    bool make_default = 6;
}

message GetPaymentMethodsRequest {
    string oauth_id = 1;
    saga.proto.common.payment.PaymentProviderId payment_provider_id = 2;
}

message UpdatePaymentMethodRequest {
    string oauth_id = 1;
    oneof provider {
        UpdateCybersourceCardProto cybersource = 4;
        UpholdFinishLinkProto uphold = 5;
    }
}

message UpdateCybersourceCardProto {
    string payment_method_token = 1;
    string exp_month = 2;
    string exp_year = 3;
    string card_type = 4;
    string instrument_id = 5;
    Address billing_address = 6;
    bool make_default = 7;
}

message UpholdFinishLinkProto {
    string state_code = 1;
    string generated_temporary_code = 2;
}

message DeletePaymentMethodRequest {
    string oauth_id = 1;
    saga.proto.common.payment.PaymentProviderId payment_provider_id = 2;
    string payment_method_token = 3; // @excluded prob create a payload per provider?
}


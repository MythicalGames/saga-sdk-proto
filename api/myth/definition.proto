syntax = "proto3";

import "api/order/definition.proto";

option java_multiple_files = true;
option java_package = "games.mythical.saga.sdk.proto.api.myth";

package saga.api.myth;
/**
 * @exclude
 * ----- Myth Token Definitions -----
 */

/* Proto of converted units from gwei/eth */
message GasFeeProto {
    /* GWEI amount to convert */
    string gwei_amount = 1;
    /* ETH amount to convert */
    string eth_amount = 2;
    /* Amount after conversion */
    string converted_amount = 3;
    /* Currency to convert GWEI/ETH to */
    string converted_currency = 4;
}

message CurrencyExchangeProto {
    /* bid amount from Uphold */
    string bid = 1;
    /* ask amount from Uphold */
    string ask = 2;
}

/**
 * @exclude
 * ----- Request and Response Definitions -----
 */
message QuoteBuyingMythTokenRequest {
    /* Amount of MYTH Tokens to buy */
    string quantity = 1;
    /* Payment provider data */
    saga.api.order.PaymentProviderData payment_provider_data = 2;
    string denomination_currency = 3;
    string origin_sub_account = 4;
    /* User that is buying MYTH Tokens */
    string oauth_id = 5;
}

message QuoteBuyingMythTokenResponse {
    string uphold_quote_id = 1;
    string origin_sub_account = 2;
}

message ConfirmBuyingMythTokenRequest {
    string quote_id = 1;
    string oauth_id = 2;
    saga.api.order.PaymentProviderData payment_provider_data = 3;
}

message QuoteMythTokenWithdrawalRequest {
    string oauth_id = 1;
    string quantity = 2;
}

message QuoteMythTokenWithdrawalResponse {
    /* Amount of MYTH Tokens to withdraw */
    string total_amount = 1;
    /* Gas cost of withdrawal */
    string gas_fee = 2;
}

message ConfirmMythTokenWithdrawalRequest {
    /* Quote Id for this withdrawal */
    string quote_id = 1;
}

message DepositNmythRequest {
    string oauth_id = 1;
    string quantity = 2;
    string source_wallet = 3;
}
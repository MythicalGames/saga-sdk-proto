syntax = "proto3";

option java_multiple_files = true;
option java_package = "games.mythical.saga.sdk.proto.api.item";

import "common/item/definition.proto";
import "common/common.proto";
import "common/finalization.proto";
import "common/query.proto";
import "google/protobuf/timestamp.proto";

package saga.api.item;

/**
 * @exclude
 * ----- Item Definitions -----
 */
message ItemProto {
    string trace_id = 1;
    /* The game's unique id for this Item */
    string inventory_id = 2;
    string oauth_id = 3;
    int64 token_id = 4;
    bool finalized = 5;
    string block_explorer_url = 6;
    string metadata_url = 7;
    /* When was this Item created */
    google.protobuf.Timestamp created_at = 8;
    /* When was this Item last updated */
    google.protobuf.Timestamp updated_at = 9;
    string state = 10;
}

message ItemsProto {
    repeated ItemProto items = 1;
}

/**
 * @exclude
 * ----- Request and Response Definitions -----
 */

/* Issue item call */
message IssueItemRequest {
    /* Repeated items so that metadata is unique per item */
    repeated IssueItemProto items = 1;
    /* Oauth id of wallet accepting items */
    string recipient_oauth_id = 2;
    /* Unique id set for your game of the Item being issued */
    string item_type_id = 3;
}

message IssueItemProto {
    /* GameInventory Ids of Items being issued */
    string inventory_id = 1;
    /* Metadata associated to Item being issued */
    saga.common.Metadata metadata = 2;
    /* TokenId associated to Item being issued */
    uint64 token_id = 4;
}

/* Get Item call */
message GetItemRequest {
    /* Game's id for the Item to retrieve */
    string inventory_id = 1;
}

/* Get Items call */
message GetItemsRequest {
    /* Sort/filter options */
    saga.common.QueryOptionsProto query_options = 1;
    saga.common.Finalized finalized = 2;
    string token_name = 3;
}

/* Get Items for Player call */
message GetItemsForPlayerRequest {
    /* Player to get Items for */
    string oauth_id = 1;
    /* Sort/filter options */
    saga.common.QueryOptionsProto query_options = 2;
}

/* Transfer item call */
message TransferItemRequest {
    /* Game's id for the Item to transfer */
    string inventory_id = 1;
    /* User of Item to transfer to */
    string destination_oauth_id = 3;
    string idempotency_id = 4;
    bool prefund_gas = 5;
}

/* Transfer bulk item call */
message TransferItemBulkRequest {
    string game_title_id = 1;
    /* Game's ids for the Item to transfer */
    repeated string inventory_ids = 2;
    /* User of Item to transfer to */
    string destination_oauth_id  = 3;
    string idempotency_id = 4;
}

/* Burn item call */
message BurnItemRequest {
    /* Game's id for the Item to burn */
    string inventory_id = 1;
    bool prefund_gas = 2;
}

/* Deposit item call */
message DepositItemRequest {
    string inventory_id = 1;
    string created_by = 2;
    string from_address = 3;
    string to_address = 4;
    saga.proto.common.item.BlockChains from_chain = 5;
    string transaction_id = 6;
}